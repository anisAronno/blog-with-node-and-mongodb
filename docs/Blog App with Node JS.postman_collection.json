{
  "info": {
    "_postman_id": "d4c2f69b-64ab-419e-b105-481dfef43077",
    "name": "Blog App with Node JS",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "15228368",
    "_collection_link": "https://lively-zodiac-855820.postman.co/workspace/My-Workspace~bcd0df4b-5f70-4276-8b4a-ef5845357be1/collection/15228368-d4c2f69b-64ab-419e-b105-481dfef43077?action=share&source=collection_link&creator=15228368"
  },
  "item": [
    {
      "name": "Blog",
      "item": [
        {
          "name": "Create Blog",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Blog Titale For aCheck query qMonirul kllklk\",\n    \"description\": \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. ad odio sit tenetur expedita, incidunt minima a? Soluta.\",\n    \"tags\": [ \"67400f1984d7efe78bfea2a8\"],\n    \"categories\" : [\"67400f0584d7efe78bfea29a\"],\n    \"published\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/blogs",
              "host": ["{{host}}"],
              "path": ["api", "v1", "blogs"]
            },
            "description": "### API POST /api/blog\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n    - tags (array): An array of tag IDs associated with the blog post.\n        \n    - categories (array): An array of category IDs associated with the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"blog\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"id\": {\n        \"type\": \"string\"\n      },\n      \"title\": {\n        \"type\": \"string\"\n      },\n      \"description\": {\n        \"type\": \"string\"\n      },\n      \"slug\": {\n        \"type\": \"string\"\n      },\n      \"published\": {\n        \"type\": \"boolean\"\n      },\n      \"publishedAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"author\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"tags\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\"\n            },\n            \"name\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"categories\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\"\n            },\n            \"name\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"createdAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"updatedAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n    - tags (array): An array of tag IDs associated with the blog post.\n        \n    - categories (array): An array of category IDs associated with the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"blog\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"slug\": {\n          \"type\": \"string\"\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"publishedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"author\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\"\n            },\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"username\": {\n              \"type\": \"string\"\n            },\n            \"email\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Update Blog",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Blog Titale For Checka query Monairul fde\",\n    \"description\": \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. ad odio sit tenetur expedita, incidunt minima a? Soluta.\",\n    \"tags\": [ \"67400f1984d7efe78bfea2a8\"],\n    \"categories\" : [\"67400f0584d7efe78bfea29a\"],\n    \"published\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/blogs/6740922a0ae1a431a729a20d",
              "host": ["{{host}}"],
              "path": ["api", "v1", "blogs", "6740922a0ae1a431a729a20d"]
            },
            "description": "The API endpoint allows you to update a specific blog by sending an HTTP PUT request to the specified URL.\n\n### Request Body\n\n- `title` (string): The updated title of the blog.\n    \n- `description` (string): The updated description of the blog.\n    \n\n### Request Headers\n\n- `Content-Type`: application/json\n    \n\n### Response\n\nUpon successful execution, the response will include the updated details of the blog, confirming the successful update.\n\n### Response Headers\n\n- `Status`: 200\n    \n- `Content-Type`: application/json\n    \n\nThis API endpoint allows you to update a specific blog by sending an HTTP PUT request to the specified URL.\n\n#### Request URL\n\n```\n{{host}}/api/blog/673f4b2aa43afc0376dbf06e\n\n ```\n\n#### Request Body\n\n- `title` (string): The updated title of the blog.\n    \n- `description` (string): The updated description of the blog.\n    \n- `tags` (array): An array of tag IDs associated with the blog.\n    \n- `categories` (array): An array of category IDs associated with the blog.\n    \n\n#### Request Headers\n\n- `Content-Type`: application/json\n    \n\n#### Response\n\nThe response will include the updated details of the blog, confirming the successful update.\n\n#### Response Headers\n\n- `Status`: 200\n    \n- `Content-Type`: application/json\n    \n\n#### Response Body\n\n``` json\n{\n    \"success\": true,\n    \"blog\": {\n        \"id\": \"\",\n        \"title\": \"\",\n        \"description\": \"\",\n        \"slug\": \"\",\n        \"published\": true,\n        \"publishedAt\": null,\n        \"author\": {\n            \"id\": \"\",\n            \"name\": \"\",\n            \"username\": \"\",\n            \"email\": \"\"\n        },\n        \"tags\": [\n            {\n                \"id\": \"\",\n                \"name\": \"\"\n            }\n        ],\n        \"categories\": [\n            {\n                \"id\": \"\",\n                \"name\": \"\"\n            }\n        ],\n        \"createdAt\": \"\",\n        \"updatedAt\": \"\"\n    }\n}\n\n ```\n\n### Request Body\n\n- `title` (string): The updated title of the blog.\n    \n- `description` (string): The updated description of the blog.\n    \n- `tags` (array): An array of tag IDs associated with the blog.\n    \n- `categories` (array): An array of category IDs associated with the blog.\n    \n\n### Response\n\nThe response will include the updated details of the blog, confirming the successful update. The response body will contain:\n\n- `success` (boolean): Indicates if the update was successful.\n    \n- `blog` (object): An object containing the updated details of the blog, including the ID, title, description, slug, publication status, publication date, author details, tag details, category details, creation date, and last update date.\n    \n\nThis API endpoint is used to update a specific blog by sending an HTTP PUT request to the specified URL.\n\n### Request Body\n\n- `title` (string): The updated title of the blog.\n    \n- `description` (string): The updated description of the blog.\n    \n\n### Response\n\nThe response is in the form of a JSON schema representing the updated details of the blog, confirming the successful update. The schema is as follows:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"success\": {\n            \"type\": \"boolean\"\n        },\n        \"blog\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                },\n                \"description\": {\n                    \"type\": \"string\"\n                },\n                \"slug\": {\n                    \"type\": \"string\"\n                },\n                \"published\": {\n                    \"type\": \"boolean\"\n                },\n                \"publishedAt\": {\n                    \"type\": [\"string\", \"null\"]\n                },\n                \"author\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"string\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"username\": {\n                            \"type\": \"string\"\n                        },\n                        \"email\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\"\n                            },\n                            \"name\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    }\n                },\n                \"categories\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\"\n                            },\n                            \"name\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    }\n                },\n                \"createdAt\": {\n                    \"type\": \"string\"\n                },\n                \"updatedAt\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Delete Blog",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/blogs/6740922a0ae1a431a729a20d",
              "host": ["{{host}}"],
              "path": ["api", "v1", "blogs", "6740922a0ae1a431a729a20d"]
            },
            "description": "### Delete Blog Post\n\nThis endpoint is used to delete a specific blog post.\n\n#### Request\n\n- Method: DELETE\n    \n- Endpoint: `{{host}}/api/blog/673cbb2dda54a400d8ebd39b`\n    \n\n#### Response\n\nThe response for this request is a JSON schema describing the structure of the response body.\n\n``` json\n{\n  \"success\": \"boolean\",\n  \"message\": \"string\"\n}\n\n ```\n\nThis endpoint is used to delete a specific blog post.\n\n#### Request\n\n- Method: DELETE\n    \n- Endpoint: `{{host}}/api/blog/673cbb2dda54a400d8ebd39b`\n    \n\n#### Response\n\nThe response for this request is a JSON schema describing the structure of the response body."
          },
          "response": []
        },
        {
          "name": "Force Delete Blog",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/blogs/6740922a0ae1a431a729a20d/permanent",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "blogs",
                "6740922a0ae1a431a729a20d",
                "permanent"
              ]
            },
            "description": "### Delete Blog Post\n\nThis endpoint is used to delete a specific blog post.\n\n#### Request\n\n- Method: DELETE\n    \n- Endpoint: `{{host}}/api/blog/673cbb2dda54a400d8ebd39b`\n    \n\n#### Response\n\nThe response for this request is a JSON schema describing the structure of the response body.\n\n``` json\n{\n  \"success\": \"boolean\",\n  \"message\": \"string\"\n}\n\n ```\n\nThis endpoint is used to delete a specific blog post.\n\n#### Request\n\n- Method: DELETE\n    \n- Endpoint: `{{host}}/api/blog/673cbb2dda54a400d8ebd39b`\n    \n\n#### Response\n\nThe response for this request is a JSON schema describing the structure of the response body."
          },
          "response": []
        },
        {
          "name": "Restore Deleted Blog",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/blogs/6740922a0ae1a431a729a20d/restore",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "blogs",
                "6740922a0ae1a431a729a20d",
                "restore"
              ]
            },
            "description": "### Delete Blog Post\n\nThis endpoint is used to delete a specific blog post.\n\n#### Request\n\n- Method: DELETE\n    \n- Endpoint: `{{host}}/api/blog/673cbb2dda54a400d8ebd39b`\n    \n\n#### Response\n\nThe response for this request is a JSON schema describing the structure of the response body.\n\n``` json\n{\n  \"success\": \"boolean\",\n  \"message\": \"string\"\n}\n\n ```\n\nThis endpoint is used to delete a specific blog post.\n\n#### Request\n\n- Method: DELETE\n    \n- Endpoint: `{{host}}/api/blog/673cbb2dda54a400d8ebd39b`\n    \n\n#### Response\n\nThe response for this request is a JSON schema describing the structure of the response body."
          },
          "response": []
        },
        {
          "name": "User Blogs",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/blogs?search=monirul",
              "host": ["{{host}}"],
              "path": ["api", "v1", "blogs"],
              "query": [
                {
                  "key": "search",
                  "value": "monirul"
                },
                {
                  "key": "page",
                  "value": "2",
                  "disabled": true
                }
              ]
            },
            "description": "This endpoint makes an HTTP GET request to retrieve a list of blogs from the server. The request does not require any parameters or request body.\n\n### Request Body\n\nThis request does not include a request body.\n\n### Response Body\n\n- `success` (boolean): Indicates if the request was successful.\n    \n- `blogs` (object)\n    \n    - `data` (array): An array of blog objects, each containing the following details:\n        \n        - `id` (string): The unique identifier of the blog.\n            \n        - `title` (string): The title of the blog.\n            \n        - `description` (string): The description of the blog.\n            \n        - `slug` (string): The slug of the blog.\n            \n        - `published` (boolean): Indicates if the blog is published.\n            \n        - `publishedAt` (string): The date and time when the blog was published.\n            \n        - `author` (object): Details of the author of the blog.\n            \n            - `id` (string): The unique identifier of the author.\n                \n            - `name` (string): The name of the author.\n                \n            - `username` (string): The username of the author.\n                \n            - `email` (string): The email of the author.\n                \n        - `tags` (array): An array of tags associated with the blog, each containing:\n            \n            - `id` (string): The unique identifier of the tag.\n                \n            - `name` (string): The name of the tag.\n                \n        - `categories` (array): An array of categories associated with the blog, each containing:\n            \n            - `id` (string): The unique identifier of the category.\n                \n            - `name` (string): The name of the category.\n                \n        - `createdAt` (string): The date and time when the blog was created.\n            \n        - `updatedAt` (string): The date and time when the blog was last updated.\n            \n    - `total` (number): The total number of blogs available.\n        \n    - `pagination` (object): Pagination details.\n        \n        - `page` (number): The current page number.\n            \n        - `limit` (number): The limit of blogs per page.\n            \n        - `totalPages` (number): The total number of pages available.\n            \n\nThe response provides a list of blog objects, each containing details such as title, description, author information, tags, categories, and timestamps.\n\n### Request Body\n\nN/A\n\n### Response Body\n\n- `success` (boolean): Indicates if the request was successful.\n    \n- `blogs` (object)\n    - `data` (array): An array of blog objects.\n        - `id` (string): The unique identifier of the blog.\n            \n        - `title` (string): The title of the blog.\n            \n        - `description` (string): The description of the blog.\n            \n        - `slug` (string): The slug of the blog.\n            \n        - `published` (boolean): Indicates if the blog is published.\n            \n        - `publishedAt` (string): The date and time when the blog was published.\n            \n        - `author` (object)\n            - `id` (string): The unique identifier of the author.\n                \n            - `name` (string): The name of the author.\n                \n            - `username` (string): The username of the author.\n                \n            - `email` (string): The email of the author.\n                \n        - `tags` (array): An array of tag objects.\n            - `id` (string): The unique identifier of the tag.\n                \n            - `name` (string): The name of the tag.\n                \n        - `categories` (array): An array of category objects.\n            - `id` (string): The unique identifier of the category.\n                \n            - `name` (string): The name of the category.\n                \n        - `createdAt` (string): The date and time when the blog was created.\n            \n        - `updatedAt` (string): The date and time when the blog was last updated.\n            \n    - `total` (number): The total number of blogs available.\n        \n    - `pagination` (object)\n        - `page` (number): The current page number.\n            \n        - `limit` (number): The maximum number of blogs per page.\n            \n        - `totalPages` (number): The total number of pages.\n            \n\nThe response includes a list of blog objects, each containing details such as the title, description, author information, tags, categories, and publication status."
          },
          "response": []
        },
        {
          "name": "User published blogs",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/blogs/user/67400dbd4a136d03d2ea29cd/published",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "blogs",
                "user",
                "67400dbd4a136d03d2ea29cd",
                "published"
              ]
            },
            "description": "This endpoint makes an HTTP GET request to retrieve a list of blogs from the server. The request does not require any parameters or request body.\n\n### Request Body\n\nThis request does not include a request body.\n\n### Response Body\n\n- `success` (boolean): Indicates if the request was successful.\n    \n- `blogs` (object)\n    \n    - `data` (array): An array of blog objects, each containing the following details:\n        \n        - `id` (string): The unique identifier of the blog.\n            \n        - `title` (string): The title of the blog.\n            \n        - `description` (string): The description of the blog.\n            \n        - `slug` (string): The slug of the blog.\n            \n        - `published` (boolean): Indicates if the blog is published.\n            \n        - `publishedAt` (string): The date and time when the blog was published.\n            \n        - `author` (object): Details of the author of the blog.\n            \n            - `id` (string): The unique identifier of the author.\n                \n            - `name` (string): The name of the author.\n                \n            - `username` (string): The username of the author.\n                \n            - `email` (string): The email of the author.\n                \n        - `tags` (array): An array of tags associated with the blog, each containing:\n            \n            - `id` (string): The unique identifier of the tag.\n                \n            - `name` (string): The name of the tag.\n                \n        - `categories` (array): An array of categories associated with the blog, each containing:\n            \n            - `id` (string): The unique identifier of the category.\n                \n            - `name` (string): The name of the category.\n                \n        - `createdAt` (string): The date and time when the blog was created.\n            \n        - `updatedAt` (string): The date and time when the blog was last updated.\n            \n    - `total` (number): The total number of blogs available.\n        \n    - `pagination` (object): Pagination details.\n        \n        - `page` (number): The current page number.\n            \n        - `limit` (number): The limit of blogs per page.\n            \n        - `totalPages` (number): The total number of pages available.\n            \n\nThe response provides a list of blog objects, each containing details such as title, description, author information, tags, categories, and timestamps.\n\n### Request Body\n\nN/A\n\n### Response Body\n\n- `success` (boolean): Indicates if the request was successful.\n    \n- `blogs` (object)\n    - `data` (array): An array of blog objects.\n        - `id` (string): The unique identifier of the blog.\n            \n        - `title` (string): The title of the blog.\n            \n        - `description` (string): The description of the blog.\n            \n        - `slug` (string): The slug of the blog.\n            \n        - `published` (boolean): Indicates if the blog is published.\n            \n        - `publishedAt` (string): The date and time when the blog was published.\n            \n        - `author` (object)\n            - `id` (string): The unique identifier of the author.\n                \n            - `name` (string): The name of the author.\n                \n            - `username` (string): The username of the author.\n                \n            - `email` (string): The email of the author.\n                \n        - `tags` (array): An array of tag objects.\n            - `id` (string): The unique identifier of the tag.\n                \n            - `name` (string): The name of the tag.\n                \n        - `categories` (array): An array of category objects.\n            - `id` (string): The unique identifier of the category.\n                \n            - `name` (string): The name of the category.\n                \n        - `createdAt` (string): The date and time when the blog was created.\n            \n        - `updatedAt` (string): The date and time when the blog was last updated.\n            \n    - `total` (number): The total number of blogs available.\n        \n    - `pagination` (object)\n        - `page` (number): The current page number.\n            \n        - `limit` (number): The maximum number of blogs per page.\n            \n        - `totalPages` (number): The total number of pages.\n            \n\nThe response includes a list of blog objects, each containing details such as the title, description, author information, tags, categories, and publication status."
          },
          "response": []
        },
        {
          "name": "User List",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/blogs/user/me",
              "host": ["{{host}}"],
              "path": ["api", "v1", "blogs", "user", "me"]
            },
            "description": "This endpoint makes an HTTP GET request to retrieve a list of blogs from the server. The request does not require any parameters or request body.\n\n### Request Body\n\nThis request does not include a request body.\n\n### Response Body\n\n- `success` (boolean): Indicates if the request was successful.\n    \n- `blogs` (object)\n    \n    - `data` (array): An array of blog objects, each containing the following details:\n        \n        - `id` (string): The unique identifier of the blog.\n            \n        - `title` (string): The title of the blog.\n            \n        - `description` (string): The description of the blog.\n            \n        - `slug` (string): The slug of the blog.\n            \n        - `published` (boolean): Indicates if the blog is published.\n            \n        - `publishedAt` (string): The date and time when the blog was published.\n            \n        - `author` (object): Details of the author of the blog.\n            \n            - `id` (string): The unique identifier of the author.\n                \n            - `name` (string): The name of the author.\n                \n            - `username` (string): The username of the author.\n                \n            - `email` (string): The email of the author.\n                \n        - `tags` (array): An array of tags associated with the blog, each containing:\n            \n            - `id` (string): The unique identifier of the tag.\n                \n            - `name` (string): The name of the tag.\n                \n        - `categories` (array): An array of categories associated with the blog, each containing:\n            \n            - `id` (string): The unique identifier of the category.\n                \n            - `name` (string): The name of the category.\n                \n        - `createdAt` (string): The date and time when the blog was created.\n            \n        - `updatedAt` (string): The date and time when the blog was last updated.\n            \n    - `total` (number): The total number of blogs available.\n        \n    - `pagination` (object): Pagination details.\n        \n        - `page` (number): The current page number.\n            \n        - `limit` (number): The limit of blogs per page.\n            \n        - `totalPages` (number): The total number of pages available.\n            \n\nThe response provides a list of blog objects, each containing details such as title, description, author information, tags, categories, and timestamps.\n\n### Request Body\n\nN/A\n\n### Response Body\n\n- `success` (boolean): Indicates if the request was successful.\n    \n- `blogs` (object)\n    - `data` (array): An array of blog objects.\n        - `id` (string): The unique identifier of the blog.\n            \n        - `title` (string): The title of the blog.\n            \n        - `description` (string): The description of the blog.\n            \n        - `slug` (string): The slug of the blog.\n            \n        - `published` (boolean): Indicates if the blog is published.\n            \n        - `publishedAt` (string): The date and time when the blog was published.\n            \n        - `author` (object)\n            - `id` (string): The unique identifier of the author.\n                \n            - `name` (string): The name of the author.\n                \n            - `username` (string): The username of the author.\n                \n            - `email` (string): The email of the author.\n                \n        - `tags` (array): An array of tag objects.\n            - `id` (string): The unique identifier of the tag.\n                \n            - `name` (string): The name of the tag.\n                \n        - `categories` (array): An array of category objects.\n            - `id` (string): The unique identifier of the category.\n                \n            - `name` (string): The name of the category.\n                \n        - `createdAt` (string): The date and time when the blog was created.\n            \n        - `updatedAt` (string): The date and time when the blog was last updated.\n            \n    - `total` (number): The total number of blogs available.\n        \n    - `pagination` (object)\n        - `page` (number): The current page number.\n            \n        - `limit` (number): The maximum number of blogs per page.\n            \n        - `totalPages` (number): The total number of pages.\n            \n\nThe response includes a list of blog objects, each containing details such as the title, description, author information, tags, categories, and publication status."
          },
          "response": []
        },
        {
          "name": "Published blogs",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/blogs/published",
              "host": ["{{host}}"],
              "path": ["api", "v1", "blogs", "published"]
            },
            "description": "This endpoint makes an HTTP GET request to retrieve a list of blogs from the server. The request does not require any parameters or request body.\n\n### Request Body\n\nThis request does not include a request body.\n\n### Response Body\n\n- `success` (boolean): Indicates if the request was successful.\n    \n- `blogs` (object)\n    \n    - `data` (array): An array of blog objects, each containing the following details:\n        \n        - `id` (string): The unique identifier of the blog.\n            \n        - `title` (string): The title of the blog.\n            \n        - `description` (string): The description of the blog.\n            \n        - `slug` (string): The slug of the blog.\n            \n        - `published` (boolean): Indicates if the blog is published.\n            \n        - `publishedAt` (string): The date and time when the blog was published.\n            \n        - `author` (object): Details of the author of the blog.\n            \n            - `id` (string): The unique identifier of the author.\n                \n            - `name` (string): The name of the author.\n                \n            - `username` (string): The username of the author.\n                \n            - `email` (string): The email of the author.\n                \n        - `tags` (array): An array of tags associated with the blog, each containing:\n            \n            - `id` (string): The unique identifier of the tag.\n                \n            - `name` (string): The name of the tag.\n                \n        - `categories` (array): An array of categories associated with the blog, each containing:\n            \n            - `id` (string): The unique identifier of the category.\n                \n            - `name` (string): The name of the category.\n                \n        - `createdAt` (string): The date and time when the blog was created.\n            \n        - `updatedAt` (string): The date and time when the blog was last updated.\n            \n    - `total` (number): The total number of blogs available.\n        \n    - `pagination` (object): Pagination details.\n        \n        - `page` (number): The current page number.\n            \n        - `limit` (number): The limit of blogs per page.\n            \n        - `totalPages` (number): The total number of pages available.\n            \n\nThe response provides a list of blog objects, each containing details such as title, description, author information, tags, categories, and timestamps.\n\n### Request Body\n\nN/A\n\n### Response Body\n\n- `success` (boolean): Indicates if the request was successful.\n    \n- `blogs` (object)\n    - `data` (array): An array of blog objects.\n        - `id` (string): The unique identifier of the blog.\n            \n        - `title` (string): The title of the blog.\n            \n        - `description` (string): The description of the blog.\n            \n        - `slug` (string): The slug of the blog.\n            \n        - `published` (boolean): Indicates if the blog is published.\n            \n        - `publishedAt` (string): The date and time when the blog was published.\n            \n        - `author` (object)\n            - `id` (string): The unique identifier of the author.\n                \n            - `name` (string): The name of the author.\n                \n            - `username` (string): The username of the author.\n                \n            - `email` (string): The email of the author.\n                \n        - `tags` (array): An array of tag objects.\n            - `id` (string): The unique identifier of the tag.\n                \n            - `name` (string): The name of the tag.\n                \n        - `categories` (array): An array of category objects.\n            - `id` (string): The unique identifier of the category.\n                \n            - `name` (string): The name of the category.\n                \n        - `createdAt` (string): The date and time when the blog was created.\n            \n        - `updatedAt` (string): The date and time when the blog was last updated.\n            \n    - `total` (number): The total number of blogs available.\n        \n    - `pagination` (object)\n        - `page` (number): The current page number.\n            \n        - `limit` (number): The maximum number of blogs per page.\n            \n        - `totalPages` (number): The total number of pages.\n            \n\nThe response includes a list of blog objects, each containing details such as the title, description, author information, tags, categories, and publication status."
          },
          "response": []
        },
        {
          "name": "All Blogs",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Blog Title\",\n    \"description\": \"Description\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/blogs",
              "host": ["{{host}}"],
              "path": ["api", "v1", "blogs"],
              "query": [
                {
                  "key": "page",
                  "value": "2",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "Monirul",
                  "disabled": true
                },
                {
                  "key": "title",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "1",
                  "disabled": true
                }
              ]
            },
            "description": "### GET /api/blogs-all\n\nThis endpoint retrieves all the blogs available.\n\n#### Request\n\nNo request body is required for this endpoint.\n\n#### Response\n\nThe response will be in JSON format and will have the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"blogs\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"array\"\n          },\n          \"categories\": {\n            \"type\": \"array\"\n          },\n          \"published\": {\n            \"type\": \"boolean\"\n          },\n          \"published_at\": {\n            \"type\": [\"string\", \"null\"]\n          },\n          \"createdAt\": {\n            \"type\": \"string\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\"\n          },\n          \"__v\": {\n            \"type\": \"integer\"\n          }\n        }\n      }\n    },\n    \"pagination\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"page\": {\n          \"type\": \"integer\"\n        },\n        \"limit\": {\n          \"type\": \"integer\"\n        },\n        \"total\": {\n          \"type\": \"integer\"\n        },\n        \"totalPages\": {\n          \"type\": \"integer\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint retrieves all the blogs available.\n\n#### Request\n\nNo request body is required for this endpoint.\n\n#### Response\n\nThe response will be in JSON format and will have the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"blogs\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"array\"\n          },\n          \"categories\": {\n            \"type\": \"array\"\n          },\n          \"published\": {\n            \"type\": \"boolean\"\n          },\n          \"published_at\": {\n            \"type\": [\"string\", \"null\"]\n          },\n          \"createdAt\": {\n            \"type\": \"string\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\"\n          },\n          \"__v\": {\n            \"type\": \"integer\"\n          }\n        }\n      }\n    },\n    \"pagination\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"page\": {\n          \"type\": \"integer\"\n        },\n        \"limit\": {\n          \"type\": \"integer\"\n        },\n        \"total\": {\n          \"type\": \"integer\"\n        },\n        \"totalPages\": {\n          \"type\": \"integer\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Single Blog",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Blog Title\",\n    \"description\": \"Description\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/blogs/6740922a0ae1a431a729a20d",
              "host": ["{{host}}"],
              "path": ["api", "v1", "blogs", "6740922a0ae1a431a729a20d"]
            },
            "description": "\nThis endpoint retrieves a specific blog with the given ID. The response for this request can be documented as a JSON schema as follows:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"author\": {\n      \"type\": \"string\"\n    },\n    \"date\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n```\n"
          },
          "response": []
        },
        {
          "name": "Blog by tag id",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Blog Title\",\n    \"description\": \"Description\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/blogs/tag/67400f1984d7efe78bfea2a8",
              "host": ["{{host}}"],
              "path": ["api", "v1", "blogs", "tag", "67400f1984d7efe78bfea2a8"]
            },
            "description": "\nThis endpoint retrieves a specific blog with the given ID. The response for this request can be documented as a JSON schema as follows:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"author\": {\n      \"type\": \"string\"\n    },\n    \"date\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n```\n"
          },
          "response": []
        },
        {
          "name": "Trashed Blog",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Blog Title\",\n    \"description\": \"Description\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/blogs/trash",
              "host": ["{{host}}"],
              "path": ["api", "v1", "blogs", "trash"]
            },
            "description": "\nThis endpoint retrieves a specific blog with the given ID. The response for this request can be documented as a JSON schema as follows:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"author\": {\n      \"type\": \"string\"\n    },\n    \"date\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n```\n"
          },
          "response": []
        },
        {
          "name": "Blog by Category ID",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Blog Title\",\n    \"description\": \"Description\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/blogs/category/67400f0584d7efe78bfea29a",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "blogs",
                "category",
                "67400f0584d7efe78bfea29a"
              ]
            },
            "description": "\nThis endpoint retrieves a specific blog with the given ID. The response for this request can be documented as a JSON schema as follows:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"author\": {\n      \"type\": \"string\"\n    },\n    \"date\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n```\n"
          },
          "response": []
        }
      ]
    },
    {
      "name": "User",
      "item": [
        {
          "name": "Update User By Admin",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\" : \"Anis\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/users/674095039b6c6391510bb439",
              "host": ["{{host}}"],
              "path": ["api", "v1", "users", "674095039b6c6391510bb439"]
            },
            "description": "# Update User Details\n\nThis API endpoint is used to update the details of a specific user.\n\n## Request\n\n- Method: PUT\n    \n- Endpoint: `{{host}}/api/user/673cb2dac1d50716aecd2cae`\n    \n- Body:\n    \n    - name (string, required): The updated name of the user.\n        \n\n## Response\n\nThe response for this request is a JSON object with the updated user details. Below is the JSON schema for the response:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"userId\": {\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"createdAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    },\n    \"updatedAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n\n ```\n\nThis API endpoint is used to update the details of a specific user.\n\n#### Request\n\n- Method: PUT\n    \n- Endpoint: `{{host}}/api/user/673cb2dac1d50716aecd2cae`\n    \n- Body:\n    \n    - name (string, required): The updated name of the user.\n        \n\n#### Response\n\nThe response for this request is a JSON object with the updated user details. Below is the JSON schema for the response:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"userId\": {\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"createdAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    },\n    \"updatedAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n\n ```\n\nThis API endpoint is used to update the details of a specific user.\n\n## Request\n\n- Method: PUT\n    \n- Endpoint: `{{host}}/api/user/673cb2dac1d50716aecd2cae`\n    \n- Body:\n    \n    - name (string, required): The updated name of the user.\n        \n\n## Response\n\nThe response for this request is a JSON object with the updated user details. Below is the JSON schema for the response:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"userId\": {\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"createdAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    },\n    \"updatedAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Fetch All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/api/v1/users",
              "host": ["{{host}}"],
              "path": ["api", "v1", "users"]
            },
            "description": "\n### Retrieve Users\n\nThis endpoint makes an HTTP GET request to retrieve a list of users.\n\n#### Request\n\nThe request does not require a request body. It simply makes a GET request to the `/api/users` endpoint.\n\n#### Response\n\nThe response will be a JSON object representing the list of users. Below is a JSON schema representing the structure of the response:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"users\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          }\n          // ... other user properties\n        }\n      }\n    }\n  }\n}\n```\n\n"
          },
          "response": []
        },
        {
          "name": "Single Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/api/v1/users/67400dbd4a136d03d2ea29cd",
              "host": ["{{host}}"],
              "path": ["api", "v1", "users", "67400dbd4a136d03d2ea29cd"]
            },
            "description": "\n### Get User Details\nThis endpoint retrieves the details of a specific user identified by their unique ID.\n\n#### Request Body\nThis request does not require a request body.\n\n#### Response Body\n- `id`: (string) The unique identifier of the user.\n- `name`: (string) The name of the user.\n- `email`: (string) The email address of the user.\n- `status`: (string) The status of the user account.\n\n"
          },
          "response": []
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{host}}/api/v1/users/674095039b6c6391510bb439",
              "host": ["{{host}}"],
              "path": ["api", "v1", "users", "674095039b6c6391510bb439"]
            },
            "description": "This endpoint sends an HTTP DELETE request to the specified user resource. Upon successful deletion, the response will include a JSON schema detailing the structure of the response data."
          },
          "response": []
        },
        {
          "name": "Force Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{host}}/api/v1/users/67400dda4a136d03d2ea29d5/permanent",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "users",
                "67400dda4a136d03d2ea29d5",
                "permanent"
              ]
            },
            "description": "This endpoint sends an HTTP DELETE request to the specified user resource. Upon successful deletion, the response will include a JSON schema detailing the structure of the response data."
          },
          "response": []
        },
        {
          "name": "Restore Deleted User",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{host}}/api/v1/users/67400dbd4a136d03d2ea29cd/restore",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "users",
                "67400dbd4a136d03d2ea29cd",
                "restore"
              ]
            },
            "description": "This endpoint sends an HTTP DELETE request to the specified user resource. Upon successful deletion, the response will include a JSON schema detailing the structure of the response data."
          },
          "response": []
        },
        {
          "name": "Trashed User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/api/v1/users/trash",
              "host": ["{{host}}"],
              "path": ["api", "v1", "users", "trash"]
            },
            "description": "This endpoint sends an HTTP DELETE request to the specified user resource. Upon successful deletion, the response will include a JSON schema detailing the structure of the response data."
          },
          "response": []
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Anis Aronno\",\n    \"email\": \"anisAroanno2a@anichur.com\",\n    \"password\": \"password\",\n    \"username\": \"anisaaroanno2\",\n    \"role\": \"superAdmin\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/users",
              "host": ["{{host}}"],
              "path": ["api", "v1", "users"]
            },
            "description": "\nThe `POST /api/register` endpoint is used to register a new user. The request should include the user's name, email, password, username, and role in the request body.\n\n### Request Body\n- `name`: (string) The name of the user.\n- `email`: (string) The email address of the user.\n- `password`: (string) The password for the user's account.\n- `username`: (string) The username chosen by the user.\n- `role`: (string) The role of the user (e.g., admin, user).\n\n### Response\nThe response of this request is a JSON schema representing the structure of the response object. The specific properties and their types will be defined in the JSON schema format.\n"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Anis Aronno\",\n    \"email\": \"anisAronnoaas2@anichur.com\",\n    \"password\": \"password\",\n    \"username\": \"anisaroaasnno2\",\n    \"role\": \"superAdmin\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/auth/register",
              "host": ["{{host}}"],
              "path": ["auth", "register"]
            },
            "description": "\nThe `POST /api/register` endpoint is used to register a new user. The request should include the user's name, email, password, username, and role in the request body.\n\n### Request Body\n- `name`: (string) The name of the user.\n- `email`: (string) The email address of the user.\n- `password`: (string) The password for the user's account.\n- `username`: (string) The username chosen by the user.\n- `role`: (string) The role of the user (e.g., admin, user).\n\n### Response\nThe response of this request is a JSON schema representing the structure of the response object. The specific properties and their types will be defined in the JSON schema format.\n"
          },
          "response": []
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Anichur Rahaman Aronno\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/auth/me",
              "host": ["{{host}}"],
              "path": ["auth", "me"]
            },
            "description": "\n### Update Profile\n\nThis endpoint is used to update the user's profile information.\n\n#### Request Body\n- name (string, required): The updated name of the user.\n\n#### Response\nThe response for this request follows the JSON schema below:\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n```\n"
          },
          "response": []
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"oldPassword\": \"password\",\n    \"newPassword\": \"password\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/auth/change-password",
              "host": ["{{host}}"],
              "path": ["auth", "change-password"]
            },
            "description": "\n### Change Password\n\nThis endpoint allows the user to change their password by sending a POST request to the specified URL.\n\n#### Request Body\n- `oldPassword` (string) : The user's current password.\n- `newPassword` (string) : The new password that the user wants to set.\n\n#### Response\nThe response will include the updated user information or a success message upon successful password change. In case of any error, appropriate error messages will be returned.\n\n"
          },
          "response": []
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Anis Aronno\",\n    \"email\": \"anisAronno3139@anichur.com\",\n    \"password\": \"password\",\n    \"username\": \"anisronno3139\",\n    \"role\": \"superAdmin\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/auth/login",
              "host": ["{{host}}"],
              "path": ["auth", "login"]
            },
            "description": "\n### Login API\n\nThis API endpoint is used to authenticate and login a user.\n\n#### Request Body\n- `email` (string): The email of the user.\n- `password` (string): The password of the user.\n\nExample:\n```json\n{\n  \"email\": \"admin@anichur.com\",\n  \"password\": \"password\"\n}\n```\n\n#### Response\nThe response will include the authentication token and user information upon successful login.\n"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3NDA2Y2E3ZmRkOWVjZDM5MTE3MjIyNyIsInR5cGUiOiJyZWZyZXNoIiwiaWF0IjoxNzMyMjg3MjA2LCJleHAiOjE3MzI4OTIwMDZ9.xNTId-Znrtb2LSEj86deSsDi_mZ4seRCkeMcN23acas\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/auth/refresh-token",
              "host": ["{{host}}"],
              "path": ["auth", "refresh-token"]
            },
            "description": "\n### Refresh Token\nThis endpoint is used to refresh the access token by providing the refresh token.\n\n#### Request Body\n- `refreshToken` (string): The refresh token used to obtain a new access token.\n\n#### Response\nThe response will contain the updated access token and possibly a new refresh token.\n"
          },
          "response": []
        },
        {
          "name": "Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/auth/me",
              "host": ["{{host}}"],
              "path": ["auth", "me"]
            },
            "description": "\n### Retrieve User Information\n\nThis endpoint is used to retrieve the user's information.\n\n#### Request Body\nThis request does not require a request body.\n\n#### Response\n- `id`: (string) The unique identifier for the user.\n- `name`: (string) The name of the user.\n- `email`: (string) The email address of the user.\n- `role`: (string) The role of the user in the system.\n\n"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Tags",
      "item": [
        {
          "name": "Create Tag",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book Edit newa sw\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/tags",
              "host": ["{{host}}"],
              "path": ["api", "v1", "tags"]
            },
            "description": "### API POST /api/tag\n\nThis endpoint allows the client to create a new tag.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The name of the tag.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"slug\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Update Tag",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book as vf\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/tags/6740981a492c8f56aca7c24e",
              "host": ["{{host}}"],
              "path": ["api", "v1", "tags", "6740981a492c8f56aca7c24e"]
            },
            "description": "### API PUT /api/tag/673d8edc0e96aa6b83e68552\n\nThis endpoint allows the client to update a specific tag.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The new name for the tag.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"slug\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Single Tag",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/tags/6740981a492c8f56aca7c24e",
              "host": ["{{host}}"],
              "path": ["api", "v1", "tags", "6740981a492c8f56aca7c24e"]
            },
            "description": "### API GET /api/tag/673d8bf45d38d732a124923c\n\nThis endpoint retrieves a specific tag with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - tagId (string, required): The unique identifier of the tag to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/tag/673d8bf45d38d732a124923c\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 404 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"message\": {\n    \"type\": \"string\"\n  }\n}\n\n ```\n\nExample:\n\n``` json\n{\n  \"success\": true,\n  \"message\": \"\"\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific tag by providing its unique identifier.\n\nThis endpoint is used to update a specific tag by providing the tag ID in the URL.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The updated name of the tag.\n        \n\nExample:\n\n``` json\n{\n  \"name\": \"Book 44\"\n}\n\n ```\n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "All Tags",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/tags",
              "host": ["{{host}}"],
              "path": ["api", "v1", "tags"]
            },
            "description": "### API GET /api/tags\n\nThis endpoint retrieves a specific tag by providing the tag ID in the URL.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - tagId (string, required): The unique identifier of the tag to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/tags/673d8bf45d38d732a124923c\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 200 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"data\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"slug\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific tag by providing its unique identifier.\n\n#### Request Body\n\nThis endpoint does not require a request body.\n\nThis endpoint retrieves a specific tag with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - tagId (string, required): The unique identifier of the tag to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/tag/673d8bf45d38d732a124923c\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 404 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"message\": {\n    \"type\": \"string\"\n  }\n}\n\n ```\n\nExample:\n\n``` json\n{\n  \"success\": true,\n  \"message\": \"\"\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific tag by providing its unique identifier.\n\nThis endpoint is used to update a specific tag by providing the tag ID in the URL.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The updated name of the tag.\n        \n\nExample:\n\n``` json\n{\n  \"name\": \"Book 44\"\n}\n\n ```\n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Trashed",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/tags/trash",
              "host": ["{{host}}"],
              "path": ["api", "v1", "tags", "trash"]
            },
            "description": "### API GET /api/tags\n\nThis endpoint retrieves a specific tag by providing the tag ID in the URL.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - tagId (string, required): The unique identifier of the tag to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/tags/673d8bf45d38d732a124923c\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 200 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"data\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"slug\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific tag by providing its unique identifier.\n\n#### Request Body\n\nThis endpoint does not require a request body.\n\nThis endpoint retrieves a specific tag with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - tagId (string, required): The unique identifier of the tag to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/tag/673d8bf45d38d732a124923c\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 404 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"message\": {\n    \"type\": \"string\"\n  }\n}\n\n ```\n\nExample:\n\n``` json\n{\n  \"success\": true,\n  \"message\": \"\"\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific tag by providing its unique identifier.\n\nThis endpoint is used to update a specific tag by providing the tag ID in the URL.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The updated name of the tag.\n        \n\nExample:\n\n``` json\n{\n  \"name\": \"Book 44\"\n}\n\n ```\n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Delete Tag",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/tags/6740981a492c8f56aca7c24e",
              "host": ["{{host}}"],
              "path": ["api", "v1", "tags", "6740981a492c8f56aca7c24e"]
            },
            "description": "### API DELETE /api/tag/{tag_id}\n\nThis endpoint is used to delete a specific tag identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - tag_id (string, required): The ID of the tag to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Force Delete",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/tags/67408b38b4e29fcd1f2600c2/permanent",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "tags",
                "67408b38b4e29fcd1f2600c2",
                "permanent"
              ]
            },
            "description": "### API DELETE /api/tag/{tag_id}\n\nThis endpoint is used to delete a specific tag identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - tag_id (string, required): The ID of the tag to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Restore",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/tags/6740981a492c8f56aca7c24e/restore",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "tags",
                "6740981a492c8f56aca7c24e",
                "restore"
              ]
            },
            "description": "### API DELETE /api/tag/{tag_id}\n\nThis endpoint is used to delete a specific tag identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - tag_id (string, required): The ID of the tag to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Category",
      "item": [
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Electronics item parenta\",     // Required\n  \"description\": \"Electronic devices\"  // Optional\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/categories",
              "host": ["{{host}}"],
              "path": ["api", "v1", "categories"]
            },
            "description": "### API POST /api/category\n\nThis endpoint is used to create a new category.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The name of the category.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"data\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"parentCategory\": {\n      \"type\": \"string\"\n    },\n    \"subcategories\": {\n      \"type\": \"array\",\n      \"items\": {}\n    },\n    \"_id\": {\n      \"type\": \"string\"\n    },\n    \"slug\": {\n      \"type\": \"string\"\n    },\n    \"createdAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    },\n    \"updatedAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    },\n    \"__v\": {\n      \"type\": \"number\"\n    }\n  }\n}\n\n ```\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The name of the category.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"parentCategory\": {\n          \"type\": \"null\"\n        },\n        \"subcategories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"slug\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new tag.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The name of the tag.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"slug\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 673f661f4a93418216907fa4\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/categories/674099874423812a69510464",
              "host": ["{{host}}"],
              "path": ["api", "v1", "categories", "674099874423812a69510464"]
            },
            "description": "### API PUT /api/category/673d911deb7100b89495db3f\n\nThis endpoint allows the client to update a specific category.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The new name for the category.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"parentCategory\": {\n          \"type\": \"null\"\n        },\n        \"subcategories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"slug\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to update a specific tag.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The new name for the tag.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"slug\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Single Category",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/categories/67405c0508a23c99fc8ee43d",
              "host": ["{{host}}"],
              "path": ["api", "v1", "categories", "67405c0508a23c99fc8ee43d"]
            },
            "description": "### API GET /api/category/673d911deb7100b89495db3f\n\nThis endpoint retrieves a specific category with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - categoryId (string, required): The unique identifier of the category to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/category/673d911deb7100b89495db3f\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 200 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"data\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"_id\": {\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"parentCategory\": {\n        \"type\": \"null\"\n      },\n      \"subcategories\": {\n        \"type\": \"array\",\n        \"items\": {}\n      },\n      \"slug\": {\n        \"type\": \"string\"\n      },\n      \"createdAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"updatedAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"__v\": {\n        \"type\": \"number\"\n      }\n    }\n  }\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific category by providing its unique identifier.\n\nThis endpoint retrieves a specific tag with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - tagId (string, required): The unique identifier of the tag to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/tag/673d8bf45d38d732a124923c\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 404 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"message\": {\n    \"type\": \"string\"\n  }\n}\n\n ```\n\nExample:\n\n``` json\n{\n  \"success\": true,\n  \"message\": \"\"\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific tag by providing its unique identifier.\n\nThis endpoint is used to update a specific tag by providing the tag ID in the URL.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The updated name of the tag.\n        \n\nExample:\n\n``` json\n{\n  \"name\": \"Book 44\"\n}\n\n ```\n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Category Hierarchy",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/categories/67405c0508a23c99fc8ee43d/hierarchy",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "categories",
                "67405c0508a23c99fc8ee43d",
                "hierarchy"
              ]
            },
            "description": "### API GET /api/category/673d911deb7100b89495db3f\n\nThis endpoint retrieves a specific category with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - categoryId (string, required): The unique identifier of the category to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/category/673d911deb7100b89495db3f\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 200 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"data\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"_id\": {\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"parentCategory\": {\n        \"type\": \"null\"\n      },\n      \"subcategories\": {\n        \"type\": \"array\",\n        \"items\": {}\n      },\n      \"slug\": {\n        \"type\": \"string\"\n      },\n      \"createdAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"updatedAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"__v\": {\n        \"type\": \"number\"\n      }\n    }\n  }\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific category by providing its unique identifier.\n\nThis endpoint retrieves a specific tag with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - tagId (string, required): The unique identifier of the tag to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/tag/673d8bf45d38d732a124923c\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 404 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"message\": {\n    \"type\": \"string\"\n  }\n}\n\n ```\n\nExample:\n\n``` json\n{\n  \"success\": true,\n  \"message\": \"\"\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific tag by providing its unique identifier.\n\nThis endpoint is used to update a specific tag by providing the tag ID in the URL.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The updated name of the tag.\n        \n\nExample:\n\n``` json\n{\n  \"name\": \"Book 44\"\n}\n\n ```\n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Subcategories",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/categories/6740603a6d87d0f9e3c88a46/subcategories",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "categories",
                "6740603a6d87d0f9e3c88a46",
                "subcategories"
              ]
            },
            "description": "### API GET /api/category/673d911deb7100b89495db3f\n\nThis endpoint retrieves a specific category with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - categoryId (string, required): The unique identifier of the category to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/category/673d911deb7100b89495db3f\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 200 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"data\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"_id\": {\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"parentCategory\": {\n        \"type\": \"null\"\n      },\n      \"subcategories\": {\n        \"type\": \"array\",\n        \"items\": {}\n      },\n      \"slug\": {\n        \"type\": \"string\"\n      },\n      \"createdAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"updatedAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"__v\": {\n        \"type\": \"number\"\n      }\n    }\n  }\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific category by providing its unique identifier.\n\nThis endpoint retrieves a specific tag with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - tagId (string, required): The unique identifier of the tag to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/tag/673d8bf45d38d732a124923c\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 404 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"message\": {\n    \"type\": \"string\"\n  }\n}\n\n ```\n\nExample:\n\n``` json\n{\n  \"success\": true,\n  \"message\": \"\"\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific tag by providing its unique identifier.\n\nThis endpoint is used to update a specific tag by providing the tag ID in the URL.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The updated name of the tag.\n        \n\nExample:\n\n``` json\n{\n  \"name\": \"Book 44\"\n}\n\n ```\n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Create Subcategories",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Booka u8\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/categories/67405c0508a23c99fc8ee43d/subcategory",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "categories",
                "67405c0508a23c99fc8ee43d",
                "subcategory"
              ]
            },
            "description": "### API GET /api/category/673d911deb7100b89495db3f\n\nThis endpoint retrieves a specific category with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - categoryId (string, required): The unique identifier of the category to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/category/673d911deb7100b89495db3f\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 200 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"data\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"_id\": {\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"parentCategory\": {\n        \"type\": \"null\"\n      },\n      \"subcategories\": {\n        \"type\": \"array\",\n        \"items\": {}\n      },\n      \"slug\": {\n        \"type\": \"string\"\n      },\n      \"createdAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"updatedAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"__v\": {\n        \"type\": \"number\"\n      }\n    }\n  }\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific category by providing its unique identifier.\n\nThis endpoint retrieves a specific tag with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - tagId (string, required): The unique identifier of the tag to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/tag/673d8bf45d38d732a124923c\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 404 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"message\": {\n    \"type\": \"string\"\n  }\n}\n\n ```\n\nExample:\n\n``` json\n{\n  \"success\": true,\n  \"message\": \"\"\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific tag by providing its unique identifier.\n\nThis endpoint is used to update a specific tag by providing the tag ID in the URL.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The updated name of the tag.\n        \n\nExample:\n\n``` json\n{\n  \"name\": \"Book 44\"\n}\n\n ```\n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Move Subcategory",
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"newParentId\": \"6740603a6d87d0f9e3c88a46\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/categories/67405c0508a23c99fc8ee43d/move",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "categories",
                "67405c0508a23c99fc8ee43d",
                "move"
              ]
            },
            "description": "### API GET /api/category/673d911deb7100b89495db3f\n\nThis endpoint retrieves a specific category with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - categoryId (string, required): The unique identifier of the category to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/category/673d911deb7100b89495db3f\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 200 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"data\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"_id\": {\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"parentCategory\": {\n        \"type\": \"null\"\n      },\n      \"subcategories\": {\n        \"type\": \"array\",\n        \"items\": {}\n      },\n      \"slug\": {\n        \"type\": \"string\"\n      },\n      \"createdAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"updatedAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"__v\": {\n        \"type\": \"number\"\n      }\n    }\n  }\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific category by providing its unique identifier.\n\nThis endpoint retrieves a specific tag with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - tagId (string, required): The unique identifier of the tag to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/tag/673d8bf45d38d732a124923c\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 404 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"message\": {\n    \"type\": \"string\"\n  }\n}\n\n ```\n\nExample:\n\n``` json\n{\n  \"success\": true,\n  \"message\": \"\"\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific tag by providing its unique identifier.\n\nThis endpoint is used to update a specific tag by providing the tag ID in the URL.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The updated name of the tag.\n        \n\nExample:\n\n``` json\n{\n  \"name\": \"Book 44\"\n}\n\n ```\n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Get Root Categoies",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/categories/root/all",
              "host": ["{{host}}"],
              "path": ["api", "v1", "categories", "root", "all"]
            },
            "description": "### API GET /api/category/673d911deb7100b89495db3f\n\nThis endpoint retrieves a specific category with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - categoryId (string, required): The unique identifier of the category to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/category/673d911deb7100b89495db3f\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 200 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"data\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"_id\": {\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"parentCategory\": {\n        \"type\": \"null\"\n      },\n      \"subcategories\": {\n        \"type\": \"array\",\n        \"items\": {}\n      },\n      \"slug\": {\n        \"type\": \"string\"\n      },\n      \"createdAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"updatedAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"__v\": {\n        \"type\": \"number\"\n      }\n    }\n  }\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific category by providing its unique identifier.\n\nThis endpoint retrieves a specific tag with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - tagId (string, required): The unique identifier of the tag to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/tag/673d8bf45d38d732a124923c\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 404 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"message\": {\n    \"type\": \"string\"\n  }\n}\n\n ```\n\nExample:\n\n``` json\n{\n  \"success\": true,\n  \"message\": \"\"\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific tag by providing its unique identifier.\n\nThis endpoint is used to update a specific tag by providing the tag ID in the URL.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The updated name of the tag.\n        \n\nExample:\n\n``` json\n{\n  \"name\": \"Book 44\"\n}\n\n ```\n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "All Category",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/categories",
              "host": ["{{host}}"],
              "path": ["api", "v1", "categories"],
              "query": [
                {
                  "key": "page",
                  "value": "2",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "123123",
                  "disabled": true
                }
              ]
            },
            "description": "### API GET /api/categories\n\nThis endpoint retrieves a list of all categories.\n\n#### Request\n\nNo request body is required for this GET request.\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 200 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"data\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"_id\": {\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"parentCategory\": {\n        \"type\": \"null\"\n      },\n      \"subcategories\": {\n        \"type\": \"array\",\n        \"items\": {}\n      },\n      \"slug\": {\n        \"type\": \"string\"\n      },\n      \"createdAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"updatedAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"__v\": {\n        \"type\": \"number\"\n      }\n    }\n  }\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve a list of all available categories.\n\nThis endpoint retrieves a specific category with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - categoryId (string, required): The unique identifier of the category to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/category/673d911deb7100b89495db3f\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 200 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"data\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"_id\": {\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"parentCategory\": {\n        \"type\": \"null\"\n      },\n      \"subcategories\": {\n        \"type\": \"array\",\n        \"items\": {}\n      },\n      \"slug\": {\n        \"type\": \"string\"\n      },\n      \"createdAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"updatedAt\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"__v\": {\n        \"type\": \"number\"\n      }\n    }\n  }\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific category by providing its unique identifier.\n\nThis endpoint retrieves a specific tag with the given ID.\n\n#### Request\n\nNo request body is required for this GET request.\n\n- Path parameter\n    \n    - tagId (string, required): The unique identifier of the tag to be retrieved.\n        \n\nExample:\n\n```\n{{host}}/api/tag/673d8bf45d38d732a124923c\n\n ```\n\n#### Response\n\nUpon a successful retrieval, the response will have a status code of 404 and a JSON object with the following schema:\n\n``` json\n{\n  \"success\": {\n    \"type\": \"boolean\"\n  },\n  \"message\": {\n    \"type\": \"string\"\n  }\n}\n\n ```\n\nExample:\n\n``` json\n{\n  \"success\": true,\n  \"message\": \"\"\n}\n\n ```\n\n#### Use Case\n\nThis endpoint can be used when a client needs to retrieve details about a specific tag by providing its unique identifier.\n\nThis endpoint is used to update a specific tag by providing the tag ID in the URL.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The updated name of the tag.\n        \n\nExample:\n\n``` json\n{\n  \"name\": \"Book 44\"\n}\n\n ```\n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/categories/674099874423812a69510464",
              "host": ["{{host}}"],
              "path": ["api", "v1", "categories", "674099874423812a69510464"]
            },
            "description": "### API DELETE /api/category/{category_id}\n\nThis endpoint is used to delete a specific category identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - category_id (string, required): The ID of the category to be deleted.\n        \n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The name of the category to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint is used to delete a specific category identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - category_id (string, required): The ID of the category to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint is used to delete a specific tag identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - tag_id (string, required): The ID of the tag to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Trashed Category",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/categories/trash",
              "host": ["{{host}}"],
              "path": ["api", "v1", "categories", "trash"]
            },
            "description": "### API DELETE /api/category/{category_id}\n\nThis endpoint is used to delete a specific category identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - category_id (string, required): The ID of the category to be deleted.\n        \n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The name of the category to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint is used to delete a specific category identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - category_id (string, required): The ID of the category to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint is used to delete a specific tag identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - tag_id (string, required): The ID of the tag to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Force Delete",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/categories/674099874423812a69510464/permanent",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "categories",
                "674099874423812a69510464",
                "permanent"
              ]
            },
            "description": "### API DELETE /api/category/{category_id}\n\nThis endpoint is used to delete a specific category identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - category_id (string, required): The ID of the category to be deleted.\n        \n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The name of the category to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint is used to delete a specific category identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - category_id (string, required): The ID of the category to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint is used to delete a specific tag identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - tag_id (string, required): The ID of the tag to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        },
        {
          "name": "Restore Category",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Book 44\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/categories/674099874423812a69510464/restore",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "categories",
                "674099874423812a69510464",
                "restore"
              ]
            },
            "description": "### API DELETE /api/category/{category_id}\n\nThis endpoint is used to delete a specific category identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - category_id (string, required): The ID of the category to be deleted.\n        \n\n#### Request Body\n\n- raw (application/json)\n    \n    - name (string): The name of the category to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint is used to delete a specific category identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - category_id (string, required): The ID of the category to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint is used to delete a specific tag identified by its ID.\n\n#### Request\n\n- Path Parameters\n    \n    - tag_id (string, required): The ID of the tag to be deleted.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThis endpoint allows the client to create a new blog post.\n\n#### Request Body\n\n- raw (application/json)\n    \n    - title (string): The title of the blog post.\n        \n    - description (string): The description of the blog post.\n        \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"author\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"categories\": {\n          \"type\": \"array\",\n          \"items\": {}\n        },\n        \"published\": {\n          \"type\": \"boolean\"\n        },\n        \"published_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Settings",
      "item": [
        {
          "name": "Create Settings",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"key\" : \"asd\",\n    \"value\": \"Application Name\",\n    \"meta\" : {\n        \"name\": \"anis\"\n    },\n    \"private\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/settings",
              "host": ["{{host}}"],
              "path": ["api", "v1", "settings"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Settings",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"key\" : \"Application Name\",\n    \"value\": \"Application Name\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/settings",
              "host": ["{{host}}"],
              "path": ["api", "v1", "settings"]
            }
          },
          "response": []
        },
        {
          "name": "Get Public Settings",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"key\" : \"Application Name\",\n    \"value\": \"Application Name\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/settings/public",
              "host": ["{{host}}"],
              "path": ["api", "v1", "settings", "public"]
            }
          },
          "response": []
        },
        {
          "name": "Get Private Settings",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"key\" : \"Application Name\",\n    \"value\": \"Application Name\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/settings/private",
              "host": ["{{host}}"],
              "path": ["api", "v1", "settings", "private"]
            }
          },
          "response": []
        },
        {
          "name": "Get Settings By Key",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"key\" : \"Application Name\",\n    \"value\": \"Application Name\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/settings/awsaddasdq",
              "host": ["{{host}}"],
              "path": ["api", "v1", "settings", "awsaddasdq"]
            }
          },
          "response": []
        },
        {
          "name": "Get Public Settings By Key",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"key\" : \"Application Name\",\n    \"value\": \"Application Name\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/settings/public/awsaddasdqas",
              "host": ["{{host}}"],
              "path": ["api", "v1", "settings", "public", "awsaddasdqas"]
            }
          },
          "response": []
        },
        {
          "name": "Get Private Settings By Key",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"key\" : \"Application Name\",\n    \"value\": \"Application Name\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/settings/private/asd",
              "host": ["{{host}}"],
              "path": ["api", "v1", "settings", "private", "asd"]
            }
          },
          "response": []
        },
        {
          "name": "Update Settings By Key",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/settings/awsaddasdq",
              "host": ["{{host}}"],
              "path": ["api", "v1", "settings", "awsaddasdq"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Settings By Key",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"key\" : \"Application Name\",\n    \"value\": \"Application Name\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/settings/awsaddasdq",
              "host": ["{{host}}"],
              "path": ["api", "v1", "settings", "awsaddasdq"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Contact",
      "item": [
        {
          "name": "store",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe99@123swaera.com\",\n  \"subject\": \"Issue with API request\",\n  \"message\": \"This is a test message\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/contact",
              "host": ["{{host}}"],
              "path": ["api", "v1", "contact"]
            }
          },
          "response": []
        },
        {
          "name": "Get ALL",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe3@example.com\",\n  \"subject\": \"Issue with API request\",\n  \"message\": \"This is a test message\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/contact",
              "host": ["{{host}}"],
              "path": ["api", "v1", "contact"]
            }
          },
          "response": []
        },
        {
          "name": "Update",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"johndaoe99@example.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/contact/67409151d3f1388b1ee8ffec",
              "host": ["{{host}}"],
              "path": ["api", "v1", "contact", "67409151d3f1388b1ee8ffec"]
            }
          },
          "response": []
        },
        {
          "name": "Force Delete",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"johndaoe99@example.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/contact/67409151d3f1388b1ee8ffec/permanent",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "contact",
                "67409151d3f1388b1ee8ffec",
                "permanent"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Trashed",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"johndaoe99@example.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/contact/trash",
              "host": ["{{host}}"],
              "path": ["api", "v1", "contact", "trash"]
            }
          },
          "response": []
        },
        {
          "name": "Restore",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"johndaoe99@example.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/contact/67409a51179a194933f983cd/restore",
              "host": ["{{host}}"],
              "path": [
                "api",
                "v1",
                "contact",
                "67409a51179a194933f983cd",
                "restore"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"johndaoe99@example.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/contact/67409a51179a194933f983cd",
              "host": ["{{host}}"],
              "path": ["api", "v1", "contact", "67409a51179a194933f983cd"]
            }
          },
          "response": []
        },
        {
          "name": "Show",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"johndoe99@example.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/api/v1/contact/67409151d3f1388b1ee8ffec",
              "host": ["{{host}}"],
              "path": ["api", "v1", "contact", "67409151d3f1388b1ee8ffec"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3NDA5YzNhNTEyNGRhZGJlMTFhZGU3OSIsImVtYWlsIjoiYW5pc2Fyb25ub2FhczJAYW5pY2h1ci5jb20iLCJyb2xlIjoic3VwZXJBZG1pbiIsImlhdCI6MTczMjI4NzYxNywiZXhwIjoxNzMyNTAzNjE3fQ.33lMdnun9EZ2PZc23OzAv5A63-Yf3lS7EZ1fDaOpWIs",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "host",
      "value": "http://localhost:9001",
      "type": "string"
    }
  ]
}
